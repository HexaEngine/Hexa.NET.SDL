// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	/// <summary>
	/// hidapi info structure <br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLHidDeviceInfo
	{
		/// <summary>
		/// Platform-specific device path <br/>
		/// </summary>
		public unsafe byte* Path;

		/// <summary>
		/// Device Vendor ID <br/>
		/// </summary>
		public ushort VendorId;

		/// <summary>
		/// Device Product ID <br/>
		/// </summary>
		public ushort ProductId;

		/// <summary>
		/// Serial Number <br/>
		/// </summary>
		public unsafe char* SerialNumber;

		/// <summary>
		/// Device Release Number in binary-coded decimal,<br/>
		/// also known as Device Version Number <br/>
		/// </summary>
		public ushort ReleaseNumber;

		/// <summary>
		/// Manufacturer String <br/>
		/// </summary>
		public unsafe char* ManufacturerString;

		/// <summary>
		/// Product string <br/>
		/// </summary>
		public unsafe char* ProductString;

		/// <summary>
		/// Usage Page for this Device/Interface<br/>
		/// (Windows/Mac only). <br/>
		/// </summary>
		public ushort UsagePage;

		/// <summary>
		/// Usage for this Device/Interface<br/>
		/// (Windows/Mac only).<br/>
		/// </summary>
		public ushort Usage;

		/// <summary>
		/// The USB interface which this logical device<br/>
		/// represents.<br/>
		/// Valid on both Linux implementations in all cases.<br/>
		/// Valid on the Windows implementation only if the device<br/>
		/// contains more than one interface. <br/>
		/// </summary>
		public int InterfaceNumber;

		/// <summary>
		/// Additional information about the USB interface.<br/>
		/// Valid on libusb and Android implementations. <br/>
		/// </summary>
		public int InterfaceClass;

		public int InterfaceSubclass;
		public int InterfaceProtocol;
		/// <summary>
		/// Pointer to the next device <br/>
		/// </summary>
		public unsafe SDLHidDeviceInfo* Next;


		public unsafe SDLHidDeviceInfo(byte* path = default, ushort vendorId = default, ushort productId = default, char* serialNumber = default, ushort releaseNumber = default, char* manufacturerString = default, char* productString = default, ushort usagePage = default, ushort usage = default, int interfaceNumber = default, int interfaceClass = default, int interfaceSubclass = default, int interfaceProtocol = default, SDLHidDeviceInfo* next = default)
		{
			Path = path;
			VendorId = vendorId;
			ProductId = productId;
			SerialNumber = serialNumber;
			ReleaseNumber = releaseNumber;
			ManufacturerString = manufacturerString;
			ProductString = productString;
			UsagePage = usagePage;
			Usage = usage;
			InterfaceNumber = interfaceNumber;
			InterfaceClass = interfaceClass;
			InterfaceSubclass = interfaceSubclass;
			InterfaceProtocol = interfaceProtocol;
			Next = next;
		}


	}

}
