// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL2
{
	/// <summary>
	/// An event used to request a file open by the system (event.drop.*)<br/>
	/// This event is enabled by default, you can disable it with SDL_EventState().<br/>
	/// If this event is enabled, you must free the filename in the event.<br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLDropEvent
	{
		/// <summary>
		/// SDL_DROPBEGIN or SDL_DROPFILE or SDL_DROPTEXT or SDL_DROPCOMPLETE <br/>
		/// </summary>
		public uint Type;

		/// <summary>
		/// In milliseconds, populated using SDL_GetTicks() <br/>
		/// </summary>
		public uint Timestamp;

		/// <summary>
		/// The file name, which should be freed with SDL_free(), is NULL on begin/complete <br/>
		/// </summary>
		public unsafe byte* File;

		/// <summary>
		/// The window that was dropped on, if any <br/>
		/// </summary>
		public uint WindowID;


		public unsafe SDLDropEvent(uint type = default, uint timestamp = default, byte* file = default, uint windowID = default)
		{
			Type = type;
			Timestamp = timestamp;
			File = file;
			WindowID = windowID;
		}


	}

}
