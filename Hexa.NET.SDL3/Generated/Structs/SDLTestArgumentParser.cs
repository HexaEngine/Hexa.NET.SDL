// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	[NativeName(NativeNameType.StructOrClass, "SDLTest_ArgumentParser")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLTestArgumentParser
	{
		/// <summary>
		/// !<br/>
		/// <<br/>
		/// Parse an argument. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "parse_arguments")]
		[NativeName(NativeNameType.Type, "SDLTest_ParseArgumentsFp")]
		public unsafe void* ParseArguments;
		/// <summary>
		/// !<br/>
		/// <<br/>
		/// Finalize this argument parser. Called once before parsing the first argument. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "finalize")]
		[NativeName(NativeNameType.Type, "SDLTest_FinalizeArgumentParserFp")]
		public unsafe void* Finalize;
		/// <summary>
		/// !<br/>
		/// <<br/>
		/// Null-terminated array of arguments. Printed when running with --help. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "usage")]
		[NativeName(NativeNameType.Type, "char const * *")]
		public unsafe byte** Usage;

		/// <summary>
		/// !<br/>
		/// <<br/>
		/// User data, passed to all callbacks. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "data")]
		[NativeName(NativeNameType.Type, "void *")]
		public unsafe void* Data;

		/// <summary>
		/// !<br/>
		/// <<br/>
		/// Next argument parser. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "next")]
		[NativeName(NativeNameType.Type, "SDLTest_ArgumentParser *")]
		public unsafe SDLTestArgumentParser* Next;


		public unsafe SDLTestArgumentParser(SDLTestParseArgumentsFp parseArguments = default, SDLTestFinalizeArgumentParserFp finalize = default, byte** usage = default, void* data = default, SDLTestArgumentParser* next = default)
		{
			ParseArguments = (delegate*<void*, byte**, int, int>)Marshal.GetFunctionPointerForDelegate(parseArguments);
			Finalize = (delegate*<void*, void>)Marshal.GetFunctionPointerForDelegate(finalize);
			Usage = usage;
			Data = data;
			Next = next;
		}


	}

}
