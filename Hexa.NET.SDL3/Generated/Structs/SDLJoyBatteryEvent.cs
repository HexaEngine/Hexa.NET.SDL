// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Joysick battery level change event structure (event.jbattery.*)<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_JoyBatteryEvent")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLJoyBatteryEvent
	{
		/// <summary>
		/// SDL_EVENT_JOYSTICK_BATTERY_UPDATED <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "SDL_EventType")]
		public SDLEventType Type;

		[NativeName(NativeNameType.Field, "reserved")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "timestamp")]
		[NativeName(NativeNameType.Type, "Uint64")]
		public ulong Timestamp;

		/// <summary>
		/// The joystick instance id <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "which")]
		[NativeName(NativeNameType.Type, "SDL_JoystickID")]
		public int Which;

		/// <summary>
		/// The joystick battery state <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "state")]
		[NativeName(NativeNameType.Type, "SDL_PowerState")]
		public SDLPowerState State;

		/// <summary>
		/// The joystick battery percent charge remaining <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "percent")]
		[NativeName(NativeNameType.Type, "int")]
		public int Percent;


		public unsafe SDLJoyBatteryEvent(SDLEventType type = default, uint reserved = default, ulong timestamp = default, int which = default, SDLPowerState state = default, int percent = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			Which = which;
			State = state;
			Percent = percent;
		}


	}

}
