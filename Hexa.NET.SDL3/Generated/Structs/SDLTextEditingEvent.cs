// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Keyboard text editing event structure (event.edit.*)<br/>
	/// The start cursor is the position, in UTF-8 characters, where new typing<br/>
	/// will be inserted into the editing text. The length is the number of UTF-8<br/>
	/// characters that will be replaced by new typing.<br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLTextEditingEvent
	{
		/// <summary>
		/// SDL_EVENT_TEXT_EDITING <br/>
		/// </summary>
		public SDLEventType Type;

		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		public ulong Timestamp;

		/// <summary>
		/// The window with keyboard focus, if any <br/>
		/// </summary>
		public uint WindowID;

		/// <summary>
		/// The editing text <br/>
		/// </summary>
		public unsafe byte* Text;

		/// <summary>
		/// The start cursor of selected editing text, or -1 if not set <br/>
		/// </summary>
		public int Start;

		/// <summary>
		/// The length of selected editing text, or -1 if not set <br/>
		/// </summary>
		public int Length;


		public unsafe SDLTextEditingEvent(SDLEventType type = default, uint reserved = default, ulong timestamp = default, uint windowID = default, byte* text = default, int start = default, int length = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			WindowID = windowID;
			Text = text;
			Start = start;
			Length = length;
		}


	}

}
