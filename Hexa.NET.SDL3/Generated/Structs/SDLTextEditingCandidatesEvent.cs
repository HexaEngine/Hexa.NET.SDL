// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Keyboard IME candidates event structure (event.edit_candidates.*)<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_TextEditingCandidatesEvent")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLTextEditingCandidatesEvent
	{
		/// <summary>
		/// SDL_EVENT_TEXT_EDITING_CANDIDATES <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "SDL_EventType")]
		public SDLEventType Type;

		[NativeName(NativeNameType.Field, "reserved")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "timestamp")]
		[NativeName(NativeNameType.Type, "Uint64")]
		public ulong Timestamp;

		/// <summary>
		/// The window with keyboard focus, if any <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "windowID")]
		[NativeName(NativeNameType.Type, "SDL_WindowID")]
		public uint WindowID;

		/// <summary>
		/// The list of candidates, or NULL if there are no candidates available <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "candidates")]
		[NativeName(NativeNameType.Type, "char const * const *")]
		public unsafe byte** Candidates;

		/// <summary>
		/// The number of strings in `candidates` <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "num_candidates")]
		[NativeName(NativeNameType.Type, "Sint32")]
		public int NumCandidates;

		/// <summary>
		/// The index of the selected candidate, or -1 if no candidate is selected <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "selected_candidate")]
		[NativeName(NativeNameType.Type, "Sint32")]
		public int SelectedCandidate;

		/// <summary>
		/// SDL_TRUE if the list is horizontal, SDL_FALSE if it's vertical <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "horizontal")]
		[NativeName(NativeNameType.Type, "SDL_bool")]
		public int Horizontal;


		public unsafe SDLTextEditingCandidatesEvent(SDLEventType type = default, uint reserved = default, ulong timestamp = default, uint windowID = default, byte** candidates = default, int numCandidates = default, int selectedCandidate = default, int horizontal = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			WindowID = windowID;
			Candidates = candidates;
			NumCandidates = numCandidates;
			SelectedCandidate = selectedCandidate;
			Horizontal = horizontal;
		}


	}

}
