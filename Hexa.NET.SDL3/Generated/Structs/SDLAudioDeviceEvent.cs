// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Audio device event structure (event.adevice.*)<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_AudioDeviceEvent")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLAudioDeviceEvent
	{
		/// <summary>
		/// SDL_EVENT_AUDIO_DEVICE_ADDED, or SDL_EVENT_AUDIO_DEVICE_REMOVED, or SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "type")]
		[NativeName(NativeNameType.Type, "SDL_EventType")]
		public SDLEventType Type;

		[NativeName(NativeNameType.Field, "reserved")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "timestamp")]
		[NativeName(NativeNameType.Type, "Uint64")]
		public ulong Timestamp;

		/// <summary>
		/// SDL_AudioDeviceID for the device being added or removed or changing <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "which")]
		[NativeName(NativeNameType.Type, "SDL_AudioDeviceID")]
		public uint Which;

		/// <summary>
		/// zero if a playback device, non-zero if a recording device. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "recording")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Recording;

		[NativeName(NativeNameType.Field, "padding1")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding1;
		[NativeName(NativeNameType.Field, "padding2")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding2;
		[NativeName(NativeNameType.Field, "padding3")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding3;

		public unsafe SDLAudioDeviceEvent(SDLEventType type = default, uint reserved = default, ulong timestamp = default, uint which = default, byte recording = default, byte padding1 = default, byte padding2 = default, byte padding3 = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			Which = which;
			Recording = recording;
			Padding1 = padding1;
			Padding2 = padding2;
			Padding3 = padding3;
		}


	}

}
