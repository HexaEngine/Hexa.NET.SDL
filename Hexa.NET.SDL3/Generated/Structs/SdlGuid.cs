// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// An SDL_GUID is a 128-bit identifier for an input device that identifies<br/>
	/// that device across runs of SDL programs on the same platform.<br/>
	/// If the device is detached and then re-attached to a different port, or if<br/>
	/// the base system is rebooted, the device should still report the same GUID.<br/>
	/// GUIDs are as precise as possible but are not guaranteed to distinguish<br/>
	/// physically distinct but equivalent devices. For example, two game<br/>
	/// controllers from the same vendor with the same product ID and revision may<br/>
	/// have the same GUID.<br/>
	/// GUIDs may be platform-dependent (i.e., the same device may report different<br/>
	/// GUIDs on different operating systems).<br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SdlGuid
	{
		public byte Data_0;
		public byte Data_1;
		public byte Data_2;
		public byte Data_3;
		public byte Data_4;
		public byte Data_5;
		public byte Data_6;
		public byte Data_7;
		public byte Data_8;
		public byte Data_9;
		public byte Data_10;
		public byte Data_11;
		public byte Data_12;
		public byte Data_13;
		public byte Data_14;
		public byte Data_15;

		public unsafe SdlGuid(byte* data = default)
		{
			if (data != default(byte*))
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
			}
		}

		public unsafe SdlGuid(Span<byte> data = default)
		{
			if (data != default(Span<byte>))
			{
				Data_0 = data[0];
				Data_1 = data[1];
				Data_2 = data[2];
				Data_3 = data[3];
				Data_4 = data[4];
				Data_5 = data[5];
				Data_6 = data[6];
				Data_7 = data[7];
				Data_8 = data[8];
				Data_9 = data[9];
				Data_10 = data[10];
				Data_11 = data[11];
				Data_12 = data[12];
				Data_13 = data[13];
				Data_14 = data[14];
				Data_15 = data[15];
			}
		}


	}

}
