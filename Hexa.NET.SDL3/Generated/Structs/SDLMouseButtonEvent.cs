// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Mouse button event structure (event.button.*)<br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLMouseButtonEvent
	{
		/// <summary>
		/// SDL_EVENT_MOUSE_BUTTON_DOWN or SDL_EVENT_MOUSE_BUTTON_UP <br/>
		/// </summary>
		public SDLEventType Type;

		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		public ulong Timestamp;

		/// <summary>
		/// The window with mouse focus, if any <br/>
		/// </summary>
		public uint WindowID;

		/// <summary>
		/// The mouse instance id in relative mode, SDL_TOUCH_MOUSEID for touch events, or 0 <br/>
		/// </summary>
		public uint Which;

		/// <summary>
		/// The mouse button index <br/>
		/// </summary>
		public byte Button;

		/// <summary>
		/// true if the button is pressed <br/>
		/// </summary>
		public byte Down;

		/// <summary>
		/// 1 for single-click, 2 for double-click, etc. <br/>
		/// </summary>
		public byte Clicks;

		public byte Padding;
		/// <summary>
		/// X coordinate, relative to window <br/>
		/// </summary>
		public float X;

		/// <summary>
		/// Y coordinate, relative to window <br/>
		/// </summary>
		public float Y;


		public unsafe SDLMouseButtonEvent(SDLEventType type = default, uint reserved = default, ulong timestamp = default, uint windowID = default, uint which = default, byte button = default, bool down = default, byte clicks = default, byte padding = default, float x = default, float y = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			WindowID = windowID;
			Which = which;
			Button = button;
			Down = down ? (byte)1 : (byte)0;
			Clicks = clicks;
			Padding = padding;
			X = x;
			Y = y;
		}


	}

}
