// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Information about an assertion failure.<br/>
	/// This structure is filled in with information about a triggered assertion,<br/>
	/// used by the assertion handler, then added to the assertion report. This is<br/>
	/// returned as a linked list from SDL_GetAssertionReport().<br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_AssertData")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLAssertData
	{
		/// <summary>
		/// true if app should always continue when assertion is triggered. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "always_ignore")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte AlwaysIgnore;

		/// <summary>
		/// Number of times this assertion has been triggered. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "trigger_count")]
		[NativeName(NativeNameType.Type, "unsigned int")]
		public uint TriggerCount;

		/// <summary>
		/// A string of this assert's test code. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "condition")]
		[NativeName(NativeNameType.Type, "char const *")]
		public unsafe byte* Condition;

		/// <summary>
		/// The source file where this assert lives. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "filename")]
		[NativeName(NativeNameType.Type, "char const *")]
		public unsafe byte* Filename;

		/// <summary>
		/// The line in `filename` where this assert lives. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "linenum")]
		[NativeName(NativeNameType.Type, "int")]
		public int Linenum;

		/// <summary>
		/// The name of the function where this assert lives. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "function")]
		[NativeName(NativeNameType.Type, "char const *")]
		public unsafe byte* Function;

		/// <summary>
		/// next item in the linked list. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "next")]
		[NativeName(NativeNameType.Type, "SDL_AssertData const *")]
		public unsafe SDLAssertData* Next;


		public unsafe SDLAssertData(bool alwaysIgnore = default, uint triggerCount = default, byte* condition = default, byte* filename = default, int linenum = default, byte* function = default, SDLAssertData* next = default)
		{
			AlwaysIgnore = alwaysIgnore ? (byte)1 : (byte)0;
			TriggerCount = triggerCount;
			Condition = condition;
			Filename = filename;
			Linenum = linenum;
			Function = function;
			Next = next;
		}


	}

}
