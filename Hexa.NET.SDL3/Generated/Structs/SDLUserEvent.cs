// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// A user-defined event type (event.user.*)<br/>
	/// This event is unique; it is never created by SDL, but only by the<br/>
	/// application. The event can be pushed onto the event queue using<br/>
	/// SDL_PushEvent(). The contents of the structure members are completely up to<br/>
	/// the programmer; the only requirement is that '''type''' is a value obtained<br/>
	/// from SDL_RegisterEvents().<br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLUserEvent
	{
		/// <summary>
		/// SDL_EVENT_USER through SDL_EVENT_LAST-1, Uint32 because these are not in the SDL_EventType enumeration <br/>
		/// </summary>
		public uint Type;

		public uint Reserved;
		/// <summary>
		/// In nanoseconds, populated using SDL_GetTicksNS() <br/>
		/// </summary>
		public ulong Timestamp;

		/// <summary>
		/// The associated window if any <br/>
		/// </summary>
		public uint WindowID;

		/// <summary>
		/// User defined event code <br/>
		/// </summary>
		public int Code;

		/// <summary>
		/// User defined data pointer <br/>
		/// </summary>
		public unsafe void* Data1;

		/// <summary>
		/// User defined data pointer <br/>
		/// </summary>
		public unsafe void* Data2;


		public unsafe SDLUserEvent(uint type = default, uint reserved = default, ulong timestamp = default, uint windowID = default, int code = default, void* data1 = default, void* data2 = default)
		{
			Type = type;
			Reserved = reserved;
			Timestamp = timestamp;
			WindowID = windowID;
			Code = code;
			Data1 = data1;
			Data2 = data2;
		}


	}

}
