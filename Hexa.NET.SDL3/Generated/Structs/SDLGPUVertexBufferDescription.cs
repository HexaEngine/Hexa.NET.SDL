// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// A structure specifying the parameters of vertex buffers used in a graphics<br/>
	/// pipeline.<br/>
	/// When you call SDL_BindGPUVertexBuffers, you specify the binding slots of<br/>
	/// the vertex buffers. For example if you called SDL_BindGPUVertexBuffers with<br/>
	/// a first_slot of 2 and num_bindings of 3, the binding slots 2, 3, 4 would be<br/>
	/// used by the vertex buffers you pass in.<br/>
	/// Vertex attributes are linked to buffers via the buffer_slot field of<br/>
	/// SDL_GPUVertexAttribute. For example, if an attribute has a buffer_slot of<br/>
	/// 0, then that attribute belongs to the vertex buffer bound at slot 0.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_GPUVertexBufferDescription")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLGPUVertexBufferDescription
	{
		/// <summary>
		/// The binding slot of the vertex buffer. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "slot")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Slot;

		/// <summary>
		/// The byte pitch between consecutive elements of the vertex buffer. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "pitch")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint Pitch;

		/// <summary>
		/// Whether attribute addressing is a function of the vertex index or instance index. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "input_rate")]
		[NativeName(NativeNameType.Type, "SDL_GPUVertexInputRate")]
		public SDLGPUVertexInputRate InputRate;

		/// <summary>
		/// The number of instances to draw using the same per-instance data before advancing in the instance buffer by one element. Ignored unless input_rate is SDL_GPU_VERTEXINPUTRATE_INSTANCE <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "instance_step_rate")]
		[NativeName(NativeNameType.Type, "Uint32")]
		public uint InstanceStepRate;


		public unsafe SDLGPUVertexBufferDescription(uint slot = default, uint pitch = default, SDLGPUVertexInputRate inputRate = default, uint instanceStepRate = default)
		{
			Slot = slot;
			Pitch = pitch;
			InputRate = inputRate;
			InstanceStepRate = instanceStepRate;
		}


	}

}
