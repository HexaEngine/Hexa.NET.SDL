// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// The opaque handle that represents an audio stream.<br/>
	/// SDL_AudioStream is an audio conversion interface.<br/>
	/// - It can handle resampling data in chunks without generating artifacts,<br/>
	/// when it doesn't have the complete buffer available.<br/>
	/// - It can handle incoming data in any variable size.<br/>
	/// - It can handle input/output format changes on the fly.<br/>
	/// - It can remap audio channels between inputs and outputs.<br/>
	/// - You push data as you have it, and pull it when you need it<br/>
	/// - It can also function as a basic audio data queue even if you just have<br/>
	/// sound that needs to pass from one place to another.<br/>
	/// - You can hook callbacks up to them when more data is added or requested,<br/>
	/// to manage data on-the-fly.<br/>
	/// Audio streams are the core of the SDL3 audio interface. You create one or<br/>
	/// more of them, bind them to an opened audio device, and feed data to them<br/>
	/// (or for recording, consume data from them).<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLAudioStream
	{


	}

}
