// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// A structure containing parameters for a blit command.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_GPUBlitInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLGPUBlitInfo
	{
		/// <summary>
		/// The source region for the blit. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "source")]
		[NativeName(NativeNameType.Type, "SDL_GPUBlitRegion")]
		public SDLGPUBlitRegion Source;

		/// <summary>
		/// The destination region for the blit. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "destination")]
		[NativeName(NativeNameType.Type, "SDL_GPUBlitRegion")]
		public SDLGPUBlitRegion Destination;

		/// <summary>
		/// What is done with the contents of the destination before the blit. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "load_op")]
		[NativeName(NativeNameType.Type, "SDL_GPULoadOp")]
		public SDLGPULoadOp LoadOp;

		/// <summary>
		/// The color to clear the destination region to before the blit. Ignored if load_op is not SDL_GPU_LOADOP_CLEAR. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "clear_color")]
		[NativeName(NativeNameType.Type, "SDL_FColor")]
		public SDLFColor ClearColor;

		/// <summary>
		/// The flip mode for the source region. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "flip_mode")]
		[NativeName(NativeNameType.Type, "SDL_FlipMode")]
		public SDLFlipMode FlipMode;

		/// <summary>
		/// The filter mode used when blitting. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "filter")]
		[NativeName(NativeNameType.Type, "SDL_GPUFilter")]
		public SDLGPUFilter Filter;

		/// <summary>
		/// true cycles the destination texture if it is already bound. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "cycle")]
		[NativeName(NativeNameType.Type, "bool")]
		public byte Cycle;

		[NativeName(NativeNameType.Field, "padding1")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding1;
		[NativeName(NativeNameType.Field, "padding2")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding2;
		[NativeName(NativeNameType.Field, "padding3")]
		[NativeName(NativeNameType.Type, "Uint8")]
		public byte Padding3;

		public unsafe SDLGPUBlitInfo(SDLGPUBlitRegion source = default, SDLGPUBlitRegion destination = default, SDLGPULoadOp loadOp = default, SDLFColor clearColor = default, SDLFlipMode flipMode = default, SDLGPUFilter filter = default, bool cycle = default, byte padding1 = default, byte padding2 = default, byte padding3 = default)
		{
			Source = source;
			Destination = destination;
			LoadOp = loadOp;
			ClearColor = clearColor;
			FlipMode = flipMode;
			Filter = filter;
			Cycle = cycle ? (byte)1 : (byte)0;
			Padding1 = padding1;
			Padding2 = padding2;
			Padding3 = padding3;
		}


	}

}
