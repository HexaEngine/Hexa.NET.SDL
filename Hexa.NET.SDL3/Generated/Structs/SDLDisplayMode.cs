// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// The structure that defines a display mode.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLDisplayMode
	{
		/// <summary>
		/// the display this mode is associated with <br/>
		/// </summary>
		public uint DisplayID;

		/// <summary>
		/// pixel format <br/>
		/// </summary>
		public SDLPixelFormat Format;

		/// <summary>
		/// width <br/>
		/// </summary>
		public int W;

		/// <summary>
		/// height <br/>
		/// </summary>
		public int H;

		/// <summary>
		/// scale converting size to pixels (e.g. a 1920x1080 mode with 2.0 scale would have 3840x2160 pixels) <br/>
		/// </summary>
		public float PixelDensity;

		/// <summary>
		/// refresh rate (or 0.0f for unspecified) <br/>
		/// </summary>
		public float RefreshRate;

		/// <summary>
		/// precise refresh rate numerator (or 0 for unspecified) <br/>
		/// </summary>
		public int RefreshRateNumerator;

		/// <summary>
		/// precise refresh rate denominator <br/>
		/// </summary>
		public int RefreshRateDenominator;

		/// <summary>
		/// Private <br/>
		/// </summary>
		public unsafe SDLDisplayModeData* Internal;


		public unsafe SDLDisplayMode(uint displayID = default, SDLPixelFormat format = default, int w = default, int h = default, float pixelDensity = default, float refreshRate = default, int refreshRateNumerator = default, int refreshRateDenominator = default, SDLDisplayModeData* @internal = default)
		{
			DisplayID = displayID;
			Format = format;
			W = w;
			H = h;
			PixelDensity = pixelDensity;
			RefreshRate = refreshRate;
			RefreshRateNumerator = refreshRateNumerator;
			RefreshRateDenominator = refreshRateDenominator;
			Internal = @internal;
		}


	}

}
