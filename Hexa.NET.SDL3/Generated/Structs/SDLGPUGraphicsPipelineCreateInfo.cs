// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// A structure specifying the parameters of a graphics pipeline state.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.StructOrClass, "SDL_GPUGraphicsPipelineCreateInfo")]
	[StructLayout(LayoutKind.Sequential)]
	public partial struct SDLGPUGraphicsPipelineCreateInfo
	{
		/// <summary>
		/// The vertex shader used by the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "vertex_shader")]
		[NativeName(NativeNameType.Type, "SDL_GPUShader *")]
		public unsafe SDLGPUShader* VertexShader;

		/// <summary>
		/// The fragment shader used by the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "fragment_shader")]
		[NativeName(NativeNameType.Type, "SDL_GPUShader *")]
		public unsafe SDLGPUShader* FragmentShader;

		/// <summary>
		/// The vertex layout of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "vertex_input_state")]
		[NativeName(NativeNameType.Type, "SDL_GPUVertexInputState")]
		public SDLGPUVertexInputState VertexInputState;

		/// <summary>
		/// The primitive topology of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "primitive_type")]
		[NativeName(NativeNameType.Type, "SDL_GPUPrimitiveType")]
		public SDLGPUPrimitiveType PrimitiveType;

		/// <summary>
		/// The rasterizer state of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "rasterizer_state")]
		[NativeName(NativeNameType.Type, "SDL_GPURasterizerState")]
		public SDLGPURasterizerState RasterizerState;

		/// <summary>
		/// The multisample state of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "multisample_state")]
		[NativeName(NativeNameType.Type, "SDL_GPUMultisampleState")]
		public SDLGPUMultisampleState MultisampleState;

		/// <summary>
		/// The depth-stencil state of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "depth_stencil_state")]
		[NativeName(NativeNameType.Type, "SDL_GPUDepthStencilState")]
		public SDLGPUDepthStencilState DepthStencilState;

		/// <summary>
		/// Formats and blend modes for the render targets of the graphics pipeline. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "target_info")]
		[NativeName(NativeNameType.Type, "SDL_GPUGraphicsPipelineTargetInfo")]
		public SDLGPUGraphicsPipelineTargetInfo TargetInfo;

		/// <summary>
		/// A properties ID for extensions. Should be 0 if no extensions are needed. <br/>
		/// </summary>
		[NativeName(NativeNameType.Field, "props")]
		[NativeName(NativeNameType.Type, "SDL_PropertiesID")]
		public uint Props;


		public unsafe SDLGPUGraphicsPipelineCreateInfo(SDLGPUShader* vertexShader = default, SDLGPUShader* fragmentShader = default, SDLGPUVertexInputState vertexInputState = default, SDLGPUPrimitiveType primitiveType = default, SDLGPURasterizerState rasterizerState = default, SDLGPUMultisampleState multisampleState = default, SDLGPUDepthStencilState depthStencilState = default, SDLGPUGraphicsPipelineTargetInfo targetInfo = default, uint props = default)
		{
			VertexShader = vertexShader;
			FragmentShader = fragmentShader;
			VertexInputState = vertexInputState;
			PrimitiveType = primitiveType;
			RasterizerState = rasterizerState;
			MultisampleState = multisampleState;
			DepthStencilState = depthStencilState;
			TargetInfo = targetInfo;
			Props = props;
		}


	}

}
