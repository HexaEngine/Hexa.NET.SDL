// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// The SDL thread state.<br/>
	/// The current state of a thread can be checked by calling SDL_GetThreadState.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_ThreadState")]
	[Flags]
	public enum SDLThreadState : int
	{
		/// <summary>
		/// The thread is not valid <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_UNKNOWN")]
		[NativeName(NativeNameType.Value, "0")]
		Unknown = unchecked(0),

		/// <summary>
		/// The thread is currently running <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_ALIVE")]
		[NativeName(NativeNameType.Value, "1")]
		Alive = unchecked(1),

		/// <summary>
		/// The thread is detached and can't be waited on <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_DETACHED")]
		[NativeName(NativeNameType.Value, "2")]
		Detached = unchecked(2),

		/// <summary>
		/// The thread has finished and should be cleaned up with SDL_WaitThread() <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_THREAD_COMPLETE")]
		[NativeName(NativeNameType.Value, "3")]
		Complete = unchecked(3),
	}
}
