// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Specifies the primitive topology of a graphics pipeline.<br/>
	/// If you are using POINTLIST you must include a point size output in the<br/>
	/// vertex shader.<br/>
	/// - For HLSL compiling to SPIRV you must decorate a float output with<br/>
	/// [[vk::builtin("PointSize")]].<br/>
	/// - For GLSL you must set the gl_PointSize builtin.<br/>
	/// - For MSL you must include a float output with the [[point_size]]<br/>
	/// decorator.<br/>
	/// Note that sized point topology is totally unsupported on D3D12. Any size<br/>
	/// other than 1 will be ignored. In general, you should avoid using point<br/>
	/// topology for both compatibility and performance reasons. You WILL regret<br/>
	/// using it.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_GPUPrimitiveType")]
	[Flags]
	public enum SDLGPUPrimitiveType : int
	{
		/// <summary>
		/// A series of separate triangles. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_PRIMITIVETYPE_TRIANGLELIST")]
		[NativeName(NativeNameType.Value, "0")]
		Trianglelist = unchecked(0),

		/// <summary>
		/// A series of connected triangles. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_PRIMITIVETYPE_TRIANGLESTRIP")]
		[NativeName(NativeNameType.Value, "1")]
		Trianglestrip = unchecked(1),

		/// <summary>
		/// A series of separate lines. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_PRIMITIVETYPE_LINELIST")]
		[NativeName(NativeNameType.Value, "2")]
		Linelist = unchecked(2),

		/// <summary>
		/// A series of connected lines. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_PRIMITIVETYPE_LINESTRIP")]
		[NativeName(NativeNameType.Value, "3")]
		Linestrip = unchecked(3),

		/// <summary>
		/// A series of separate points. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_PRIMITIVETYPE_POINTLIST")]
		[NativeName(NativeNameType.Value, "4")]
		Pointlist = unchecked(4),
	}
}
