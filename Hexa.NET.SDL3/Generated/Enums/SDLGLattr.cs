// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// An enumeration of OpenGL configuration attributes.<br/>
	/// While you can set most OpenGL attributes normally, the attributes listed<br/>
	/// above must be known before SDL creates the window that will be used with<br/>
	/// the OpenGL context. These attributes are set and read with<br/>
	/// SDL_GL_SetAttribute() and SDL_GL_GetAttribute().<br/>
	/// In some cases, these attributes are minimum requests; the GL does not<br/>
	/// promise to give you exactly what you asked for. It's possible to ask for a<br/>
	/// 16-bit depth buffer and get a 24-bit one instead, for example, or to ask<br/>
	/// for no stencil buffer and still have one available. Context creation should<br/>
	/// fail if the GL can't provide your requested attributes at a minimum, but<br/>
	/// you should check to see exactly what you got.<br/>
	/// <br/>
	/// </summary>
	[Flags]
	public enum SDLGLAttr : int
	{
		/// <summary>
		/// the minimum number of bits for the red channel of the color buffer; defaults to 3. <br/>
		/// </summary>
		RedSize = unchecked(0),

		/// <summary>
		/// the minimum number of bits for the green channel of the color buffer; defaults to 3. <br/>
		/// </summary>
		GreenSize = unchecked(1),

		/// <summary>
		/// the minimum number of bits for the blue channel of the color buffer; defaults to 2. <br/>
		/// </summary>
		BlueSize = unchecked(2),

		/// <summary>
		/// the minimum number of bits for the alpha channel of the color buffer; defaults to 0. <br/>
		/// </summary>
		AlphaSize = unchecked(3),

		/// <summary>
		/// the minimum number of bits for frame buffer size; defaults to 0. <br/>
		/// </summary>
		BufferSize = unchecked(4),

		/// <summary>
		/// whether the output is single or double buffered; defaults to double buffering on. <br/>
		/// </summary>
		Doublebuffer = unchecked(5),

		/// <summary>
		/// the minimum number of bits in the depth buffer; defaults to 16. <br/>
		/// </summary>
		DepthSize = unchecked(6),

		/// <summary>
		/// the minimum number of bits in the stencil buffer; defaults to 0. <br/>
		/// </summary>
		StencilSize = unchecked(7),

		/// <summary>
		/// the minimum number of bits for the red channel of the accumulation buffer; defaults to 0. <br/>
		/// </summary>
		AccumRedSize = unchecked(8),

		/// <summary>
		/// the minimum number of bits for the green channel of the accumulation buffer; defaults to 0. <br/>
		/// </summary>
		AccumGreenSize = unchecked(9),

		/// <summary>
		/// the minimum number of bits for the blue channel of the accumulation buffer; defaults to 0. <br/>
		/// </summary>
		AccumBlueSize = unchecked(10),

		/// <summary>
		/// the minimum number of bits for the alpha channel of the accumulation buffer; defaults to 0. <br/>
		/// </summary>
		AccumAlphaSize = unchecked(11),

		/// <summary>
		/// whether the output is stereo 3D; defaults to off. <br/>
		/// </summary>
		Stereo = unchecked(12),

		/// <summary>
		/// the number of buffers used for multisample anti-aliasing; defaults to 0. <br/>
		/// </summary>
		Multisamplebuffers = unchecked(13),

		/// <summary>
		/// the number of samples used around the current pixel used for multisample anti-aliasing. <br/>
		/// </summary>
		Multisamplesamples = unchecked(14),

		/// <summary>
		/// set to 1 to require hardware acceleration, set to 0 to force software rendering; defaults to allow either. <br/>
		/// </summary>
		AcceleratedVisual = unchecked(15),

		/// <summary>
		/// not used (deprecated). <br/>
		/// </summary>
		RetainedBacking = unchecked(16),

		/// <summary>
		/// OpenGL context major version. <br/>
		/// </summary>
		ContextMajorVersion = unchecked(17),

		/// <summary>
		/// OpenGL context minor version. <br/>
		/// </summary>
		ContextMinorVersion = unchecked(18),

		/// <summary>
		/// some combination of 0 or more of elements of the SDL_GLContextFlag enumeration; defaults to 0. <br/>
		/// </summary>
		ContextFlags = unchecked(19),

		/// <summary>
		/// type of GL context (Core, Compatibility, ES). See SDL_GLProfile; default value depends on platform. <br/>
		/// </summary>
		ContextProfileMask = unchecked(20),

		/// <summary>
		/// OpenGL context sharing; defaults to 0. <br/>
		/// </summary>
		ShareWithCurrentContext = unchecked(21),

		/// <summary>
		/// requests sRGB capable visual; defaults to 0. <br/>
		/// </summary>
		FramebufferSrgbCapable = unchecked(22),

		/// <summary>
		/// sets context the release behavior. See SDL_GLContextReleaseFlag; defaults to FLUSH. <br/>
		/// </summary>
		ContextReleaseBehavior = unchecked(23),

		/// <summary>
		/// set context reset notification. See SDL_GLContextResetNotification; defaults to NO_NOTIFICATION. <br/>
		/// </summary>
		ContextResetNotification = unchecked(24),

		ContextNoError = unchecked(25),
		Floatbuffers = unchecked(26),
		EglPlatform = unchecked(27),
	}
}
