// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using HexaGen.Runtime;

namespace Hexa.NET.SDL3
{
	/// <summary>
	/// Specifies the sample count of a texture.<br/>
	/// Used in multisampling. Note that this value only applies when the texture<br/>
	/// is used as a render target.<br/>
	/// <br/>
	/// <br/>
	/// </summary>
	[NativeName(NativeNameType.Enum, "SDL_GPUSampleCount")]
	[Flags]
	public enum SDLGPUSampleCount : int
	{
		/// <summary>
		/// No multisampling. <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_SAMPLECOUNT_1")]
		[NativeName(NativeNameType.Value, "0")]
		Samplecount1 = unchecked(0),

		/// <summary>
		/// MSAA 2x <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_SAMPLECOUNT_2")]
		[NativeName(NativeNameType.Value, "1")]
		Samplecount2 = unchecked(1),

		/// <summary>
		/// MSAA 4x <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_SAMPLECOUNT_4")]
		[NativeName(NativeNameType.Value, "2")]
		Samplecount4 = unchecked(2),

		/// <summary>
		/// MSAA 8x <br/>
		/// </summary>
		[NativeName(NativeNameType.EnumItem, "SDL_GPU_SAMPLECOUNT_8")]
		[NativeName(NativeNameType.Value, "3")]
		Samplecount8 = unchecked(3),
	}
}
